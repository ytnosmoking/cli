#!/usr/bin/env node





const program = require('commander')

const inquirer = require('inquirer')

const chalk = require('chalk')
const ora = require('ora')
const download = require('download-git-repo')
program.usage('[project-name]')

program.parse(process.argv)

const args = program.args

const projectName = args[0] || ''

if (args.length < 1) {
  console.log(chalk.red('输入文件夹地址'))
  return program.help()
}



let tpl = null

try {
  tpl = require(`${__dirname}/../template`)
} catch (err) { }

if (!tpl) {
  console.log(chalk.red('没有模版,先去添加模版'))
  return
}


const list = Object.keys(tpl).map((key, index) => ({ name: key, value: tpl[key] }))
if (list.length === 0) {
  console.log(chalk.red('模版文件为空, 先去添加模版'))
  return
}


let question = [
  {
    name: 'name',
    type: 'list',
    choices: list,
    message: '请选择要初始化的模版',
    validate(val) {
      if (!val) {
        return '选择模版'
      }
      return true
    }
  }
]


inquirer.prompt(question)
  .then(answer => {
    const { name: url } = answer
    console.log(answer)
    console.log(url)
    console.log(chalk.white(
      `\n Start Generating`
    ))
    const spinner = ora('DownLoading....')
    spinner.start()

    download(
      url,
      projectName,
      err => {
        if (err) {
          spinner.fail();
          console.log(chalk.red(`Generation failed. ${err}`))
          return
        }
        // 结束加载图标
        spinner.succeed();
        console.log(chalk.green('\n Generation completed!'))
        console.log('\n To get started')
        console.log(`\n cd ${projectName} \n`)
      }
    )
  })





